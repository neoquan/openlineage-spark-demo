services:
  postgres:
    image: postgres:13
    container_name: marquez-postgres
    environment:
      POSTGRES_USER: marquez
      POSTGRES_PASSWORD: marquez
      POSTGRES_DB: marquez
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marquez"]
      interval: 5s
      timeout: 3s
      retries: 10

  marquez:
    image: marquezproject/marquez:latest
    container_name: marquez-api
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    environment:
      POSTGRES_HOST: postgres               # âœ… use POSTGRES_* vars
      POSTGRES_PORT: 5432
      POSTGRES_USER: marquez
      POSTGRES_PASSWORD: marquez
      MARQUEZ_PORT: 5000
      MARQUEZ_ADMIN_PORT: 5001
      SEARCH_ENABLED: false
    ports:
      - "5000:5000"
      - "5001:5001"
    # entrypoint: ["/opt/marquez/wait-for-it.sh", "postgres:5432", "--", "./entrypoint.sh"]

  marquez-web:
    image: marquezproject/marquez-web:latest
    container_name: marquez-web
    depends_on:
      - marquez
    ports:
      - "3000:3000"
    environment:
      MARQUEZ_HOST: marquez
      MARQUEZ_PORT: 5000
      WEB_PORT: 3000
      API_BASE_URL: http://marquez:5000/api/v1

  spark:
    # image: bitnami/spark:3.4
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark
    environment:
      - SPARK_MODE=master
      - HOME=/tmp
    depends_on:
      - marquez
    volumes:
      - ./app:/opt/spark/app
      - ./data:/opt/spark/data
    # entrypoint: /bin/bash
    # tty: true

volumes:
  db-data:
